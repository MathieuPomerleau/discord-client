trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: Release
  dockerfilePath: dockerfile

stages:
  - stage: buildStage
    displayName: Build
    condition: always()
    jobs:
      - job: buildJob
        displayName: Build job
        steps:
          - task: UseDotNet@2
            displayName: .Net 5.0.x SDK
            inputs:
              version: 5.0.x
              includePreviewVersions: true
            name: useDotNet50x

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: restore
              projects: "**/*.csproj"
              name: restore

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: "**/*.csproj"
              arguments: "--configuration $(buildConfiguration)"
              name: build

  - stage: testStage
    displayName: Test
    condition: succeeded()
    dependsOn: buildStage
    jobs:
      - job: testJob
        displayName: Test job
        steps:
          - task: UseDotNet@2
            displayName: .Net 5.0.x SDK
            inputs:
              version: 5.0.x
              includePreviewVersions: true
            name: useDotNet50x

          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: test
              arguments: "--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/"
              publishTestResults: true
              projects: "tests/**/*.csproj"
              name: test

          - task: PublishCodeCoverageResults@1
            displayName: Coverage
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: "$(Build.SourcesDirectory)/**/coverage.cobertura.xml"
            name: coverage

  - stage: dockerStage
    displayName: Dockerize
    condition: succeeded()
    dependsOn: testStage
    jobs:
      - job:
        displayName: Dockerize job
        steps:
          - task: Docker@2
            displayName: Dockerize
            inputs:
              Dockerfile: $(dockerfilePath)
              command: build
              tags: $(Build.BuildNumber)
              name: dockerize
